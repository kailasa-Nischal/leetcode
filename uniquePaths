public static int traverse(int m,int n,int[][] dp,int[] ans,int i,int j){
		if(i>m || j>n)	return 0;
		if(i==m && j==n)	return 1;
		if(dp[i][j]!=0)	return dp[i][j];
		int rgt=traverse(m, n, dp, ans, i, j+1);
		int down=traverse(m, n, dp, ans, i+1, j);
		return dp[i][j]=(up+down);
	}
	public int uniquePaths(int m, int n) {
        int[][] dp=new int[m+1][n+1];
		dp[0][0]=0;dp[0][1]=1;dp[1][0]=1;
		//int[] ans=new int[1];
		traverse(m,n,dp,ans,1,1);
		return dp[m-1][n-1];
    }
